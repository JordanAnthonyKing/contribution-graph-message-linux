#!/bin/bash

##CONFIG OPTIONS
filename="file.txt"
num_commits="15"

#reset the commits generated by an earlier run of the script
# Fatal error, needs at least one revision, otherwise go through and
# delete all commits that have heyy in them
head_count=$(git rev-list HEAD --count)
if [ $head_count -gt 1 ]; then
	GIT_SEQUENCE_EDITOR="sed -i '' -e '/heyy/d'" git rebase -i HEAD~$((head_count-1));
	git rebase --continue
fi

#parse the message
if [ "$(uname)" == "Linux" ]; then
	# convert the message into 1 character per line
	# TODO: uppercase
	message=$(echo $1 | awk '{print toupper($0)}' \
		 | sed "s/ /s/g" \
		 | sed "s/./& s /g" \
		 | sed "s/N/N i/g" | sed "s/W/W W/g" | sed "s/M/M M/g" \
		 | tr " " "\n")
		# lowercase s in the final string will insert a space
else
	echo ":^)"; exit
fi

# store the alphabet as offsets of days that need to be filled
# in from the top right corner of 7x3 boxes going down and right
A=(1 2 3 4 5 6 7 9 15 16 17 18 19 20)
B=(0 1 2 3 4 5 6 7 10 13 14 15 16 17 18 19 20)
C=(0 1 2 3 4 5 6 7 13 14 20)
D=(0 1 2 3 4 5 6 8 12 16 17 18)
E=(0 1 2 3 4 5 6 7 10 13 14 17 20)
F=(0 1 2 3 4 5 6 7 10 14 17)
G=(0 1 2 3 4 5 6 7 13 14 18 19 20)
H=(0 1 2 3 4 5 6 10 14 15 16 17 18 19 20)
I=(0 6 7 8 9 10 11 12 13 14 20)
J=(0 5 7 13 14 15 16 17 18 19)
K=(0 1 2 3 4 5 6 10 14 15 16 18 19 20)
L=(0 1 2 3 4 5 6 13 20)
M=(2 3 4 5 6 7 8 16 17 18 19 20)
N=(0 1 2 3 4 5 6 9 10 18 19)
O=(0 1 2 3 4 5 6 7 13 14 15 16 17 18 19 20)
P=(0 1 2 3 4 5 6 7 10 14 15 16 17)
Q=(0 1 2 3 4 5 7 11 12 14 15 16 17 18 20)
R=(0 1 2 3 4 5 6 7 10 14 15 16 17 18 19 20)
S=(0 1 2 3 6 7 10 13 14 17 18 19 20)
T=(0 7 8 9 10 11 12 13 14)
U=(0 1 2 3 4 5 6 13 14 15 16 17 18 19 20)
V=(0 1 2 3 4 12 13 14 15 16 17 18)
W=(0 1 2 3 4 12 13 14 15 16 17 18)
X=(0 1 2 3 4 5 6 10 14 15 16 17 18 19 20)
Y=(0 1 2 10 11 12 13 14 15 16)
Z=(0 6 7 9 10 11 13 14 20)
i=(0 1 2 3 4 5 6) # just a bar to go with N
s=() #space, should be empty, not used right now
_=(6 12 13)

#create file and initial commit on the dstart date
echo "start" > $filename
git add $filename
git commit -m "heyy"
days_from_sun=$(date $date +%u)
num_chars=0
num_spaces=0
if [ "$(uname)" == "Linux" ]; then
	for char in $message; do
		if [ "$char" == "s" ]; then
			num_spaces=$((num_spaces+1))
			continue
		fi
		echo "Working on $char"
		counter=0
		while [ $counter -lt $num_commits ]; do
			eval "for offset in \"\${$char[@]}\"; do
				echo \"$char $counter \$offset\" >> $filename
				git add $filename
				git commit -m \"heyy\"
				GIT_COMMITTER_DATE=\$(date -d \"-$days_from_sun days -51 weeks +\"$(($num_chars*3*7+$num_spaces*7))\" days +\$offset days\" +%s) git commit --amend --date=\"\$(date -d \"-$days_from_sun days -51 weeks +\"$(($num_chars*3*7+$num_spaces*7))\" days +\$offset days\" +%s)\" -m \"heyy\"
			done" #end eval
			let counter=counter+1
		done
		num_chars=$((num_chars+1))
	done
fi

git rm $filename
git commit -m "heyy"
git push origin master
